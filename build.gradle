plugins {
	id "com.webcohesion.enunciate" version "2.11.0" apply false
	id "com.bmuschko.cargo-base" version "2.3" apply false
	id "com.moowork.node" version "1.2.0" apply false
}

allprojects {
    ext {
		repositories {
    		mavenCentral()
    		jcenter()
		}
				
		/*
			INFRASTRUCTURE
		*/
		// Deploy to this server
		server = "localhost"
		
		/*
			DEPENDENCIES VERSION
		*/			
		log4jVersion = "2.11.0"
		springwebmvcVersion = "5.0.6.RELEASE"
		springOrmVersion = "5.0.6.RELEASE"
		springTestVersion = '5.0.6.RELEASE'
		junitVersion = "4.12"
		cucumberJunitVersion = "1.2.5"
		cucumberJavaVersion = "1.2.5"
		seleniumJavaVersion = "3.12.0"
		mockitoVersion = "1.10.19"
		enunciateVersion = "2.11.0"
		cargoVersion = "2.3"
		jacksonDatabindVersion = "2.9.5"
		tomcatVersion = "9.0.8"
		tomcatDbcpVersion = "9.0.8"
		hamcrestVersion = "1.3"
		servletApiVersion = "4.0.1"
		hibernateCoreVersion = "5.2.17.Final"
		h2DriverVersion = "1.4.197"
		apacheCommonsVersion = "3.7"
		apacheCommonsCollectionsVersion = "3.2.2"
		
		nodeVersion = "8.11.1"
		npmVersion = "6.0.1"

		// not used in exercise:
		// mapstructs
		// querydsl
		// flyway
		// cucumber
		// jester
		// selenium
		// sonarqube
		// etc...
	}
}

subprojects {

}

task fullClean(type: GradleBuild) {
    group 'application'
    setTasks([':ui:clean', ':services:clean'])
}

task fullBuild(type: GradleBuild) {
    group 'application'
    setTasks([':ui:npmUpdate', ':ui:npmInstall', ':services:build'])
}

task analysis(type: GradleBuild) {
    group 'application'
    setTasks([':services:findBugsMain', ':services:pmdMain'])
}
